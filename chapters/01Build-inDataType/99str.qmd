
# String


## **Boolean as a Subclass of Integer**

```python
True == 1     # True
False == 0    # True
True + True   # 2
False + 3     # 3
```

But for readability, itâ€™s best to **use `True` and `False` explicitly** for logical operations rather than numeric 1 and 0.



## ðŸ’¡ **Truthy and Falsy Values**

In a Boolean context (like `if` or `while`), Python evaluates objects as **truthy** or **falsy**:

### Falsy values:

* `False`
* `None`
* `0`, `0.0`, `0j`
* `''`, `[]`, `{}`, `set()`, `range(0)`

Everything else is **truthy**.

```python
if []:
    print("This won't run")

if [1, 2, 3]:
    print("This will run")
```

---