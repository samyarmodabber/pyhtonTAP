# Binary Sequence 

In Python, **binary sequence types** are used to handle **binary data** (as opposed to text). The three main types are:


## bytes

* **Immutable** sequence of bytes.
* Each element is an integer between `0` and `255`.
* Literal form: prefix with `b` (e.g., `b"hello"`).
* Often used for I/O operations, cryptographic operations, etc.

### Example:

```python
b = b"hello"
print(b[0])        # 104 (ASCII for 'h')
print(b[1:3])      # b'el'
```

## bytearray

* **Mutable** version of `bytes`.
* Useful when you need to modify the binary data.
* Can be created from `bytes`, `list`, or `string`.

### Example:

```python
ba = bytearray(b"hello")
ba[0] = ord('H')
print(ba)          # bytearray(b'Hello')
```


## memoryview

* A **view** object that references the data of another binary object (like `bytes`, `bytearray`, `array.array`, etc.).
* Avoids copying data, which improves performance for large datasets.
* Supports slicing and multi-dimensional data.

### Example:

```python
ba = bytearray(b"hello")
mv = memoryview(ba)
mv[0] = ord('H')
print(ba)          # bytearray(b'Hello')
```


## Comparison Table

| Feature     | `bytes`               | `bytearray`            | `memoryview`                    |
| ----------- | --------------------- | ---------------------- | ------------------------------- |
| Mutable     | ❌ No                  | ✅ Yes                  | ⚠️ View depends                 |
| Indexing    | ✅ Yes                 | ✅ Yes                  | ✅ Yes                           |
| Slicing     | ✅ Yes                 | ✅ Yes                  | ✅ Yes                           |
| Use case    | Read-only binary data | Modifiable binary data | Efficient large data processing |
| Memory copy | ✔️ Creates copy       | ✔️ Creates copy        | ❌ No copy                       |




### Binary Sequence Type Conversion

The table shows how to **convert between `bytes`, `bytearray`, and `memoryview`**, along with **examples**:


| From → To                  | Code Example                    | Result Type         |
| -------------------------- | ------------------------------- | ------------------- |
| `bytes` → `bytearray`      | `bytearray(b"abc")`             | `bytearray(b'abc')` |
| `bytearray` → `bytes`      | `bytes(bytearray(b"abc"))`      | `b'abc'`            |
| `bytes` → `memoryview`     | `memoryview(b"abc")`            | `<memory at ...>`   |
| `bytearray` → `memoryview` | `memoryview(bytearray(b"abc"))` | `<memory at ...>`   |
| `memoryview` → `bytes`     | `bytes(memoryview(b"abc"))`     | `b'abc'`            |
| `memoryview` → `bytearray` | `bytearray(memoryview(b"abc"))` | `bytearray(b'abc')` |


### Example Demonstration:

```python
b = b"abc"                            # bytes
ba = bytearray(b)                    # bytes → bytearray
mv = memoryview(b)                   # bytes → memoryview

b2 = bytes(ba)                       # bytearray → bytes
mv2 = memoryview(ba)                 # bytearray → memoryview

b3 = bytes(mv)                       # memoryview → bytes
ba3 = bytearray(mv)                  # memoryview → bytearray
```
